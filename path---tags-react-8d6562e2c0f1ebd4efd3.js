webpackJsonp([84586273293571],{414:function(t,e){t.exports={data:{site:{siteMetadata:{title:"Jason Lam",subtitle:"慎獨｜純亦不已",copyright:"© 原創版權",menu:[{label:"文章",path:"/"},{label:"關於我",path:"/about/"},{label:"聯繫",path:"/contact/"}],author:{name:"Jason Lam",email:"jasonlam0619@gmail.com",twitter:"jasonlam0619",github:"jasonlam-swatow",zhihu:"https://www.zhihu.com/people/lin-jia-jun-57/activities",rss:"#"}}},allMarkdownRemark:{edges:[{node:{fields:{slug:"/posts/react-hooks/",categorySlug:"/categories/前端/"},frontmatter:{title:"重磅：React Hooks",date:"2018-10-27T22:40:32.169Z",category:"前端",description:"React v16.7.0-alpha 後引入了「Hooks」此一向後兼容之概念。本文詳盡地介紹了 Hooks 的誕生背景、使用方法與情境。"}}},{node:{fields:{slug:"/posts/react-state-patterns",categorySlug:"/categories/前端技術/"},frontmatter:{title:"React 狀態管理模式",date:"2018-09-01T22:40:32.169Z",category:"前端技術",description:"如果你的 React 應用沒有用上恰當的狀態管理模式，開發會變得非常辛苦。"}}},{node:{fields:{slug:"/posts/derived-state/",categorySlug:"/categories/前端/"},frontmatter:{title:"你可能不需要 Derived State",date:"2018-07-27T22:40:32.169Z",category:"前端",description:"componentWillReceiveProps、getDerivedStateFromProps 均是用於因應 props 變化以更新狀態，且不導致額外渲染的生命週期。但二者經常因誤用而引致 bug。本文旨在解釋其使用場景及反模式。"}}},{node:{fields:{slug:"/posts/react-redux-and-immutable/",categorySlug:"/categories/前端技術/"},frontmatter:{title:"react-redux 與 Immutable 優化",date:"2016-09-01T23:46:37.121Z",category:"前端技術",description:"使用 react-redux 時，確保你熟悉它在更新和賦值時所做的操作，以及 immutable、side effects 和 mutation 的概念，以防止意外的 mutation 降低了應用性能。"}}}]}},pathContext:{tag:"React"}}}});
//# sourceMappingURL=path---tags-react-8d6562e2c0f1ebd4efd3.js.map